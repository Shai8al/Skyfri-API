// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Skyfri.data_access;

#nullable disable

namespace Skyfri.data_access.migrations
{
    [DbContext(typeof(SkyfriDbContext))]
    [Migration("20231221141034_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Skyfri.Models.Plant", b =>
                {
                    b.Property<Guid>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlantId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("Skyfri.Models.Portfolio", b =>
                {
                    b.Property<Guid>("PortfolioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PortfolioName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PortfolioId");

                    b.HasIndex("TenantId");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("Skyfri.Models.Tenant", b =>
                {
                    b.Property<Guid>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenantCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("Skyfri.Models.Plant", b =>
                {
                    b.HasOne("Skyfri.Models.Portfolio", "Portfolio")
                        .WithMany("plants")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("Skyfri.Models.Portfolio", b =>
                {
                    b.HasOne("Skyfri.Models.Tenant", "Tenant")
                        .WithMany("portfolios")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Skyfri.Models.Portfolio", b =>
                {
                    b.Navigation("plants");
                });

            modelBuilder.Entity("Skyfri.Models.Tenant", b =>
                {
                    b.Navigation("portfolios");
                });
#pragma warning restore 612, 618
        }
    }
}
